[build-system]
requires = ["poetry-core>=2"]
build-backend = "poetry.core.masonry.api"

[project]
name = "django-markup"
version = "1.10"
description = "A generic Django application to convert text with specific markup to html."
authors = [{ name = "Martin Mahner", email = "martin@mahner.org" }]
license = "MIT"
homepage = "https://github.com/bartTC/django-markup/"
repository = "https://github.com/bartTC/django-markup/"
classifiers = [
    "Development Status :: 6 - Mature",
    "Programming Language :: Python :: 3 :: Only",
    "Environment :: Other Environment",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "django>=3.2"
]

[project.optional-dependencies]
all_filter_dependencies = [
    "textile",
    "smartypants",
    "docutils",
    "pygments",
    "markdown",
    "bleach",
]

[tool.poetry]
readme = ["README.md", "CHANGELOG.md"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.5"
pytest-django = "^4.8.0"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
typing-extensions = "^4.11.0"
coverage = "^7.4.4"
nox = "^2025.5.1"

[tool.ruff]
target-version = "py39"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
    "ARG001", # Unused function argument (request, ...)
    "ARG002", # Unused method argument (*args, **kwargs)
    "D", # Missing or badly formatted docstrings
    "FBT", # Flake Boolean Trap (don't use arg=True in functions)

    "COM812", # (ruff format) Checks for the absence of trailing commas
    "ISC001", # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
"test_*.py" = [
    "S101", # S101 Use of `assert` detected
    "PLR2004", # Magic value used in comparison,
]


[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = ".*/migrations/.*"

[tool.ty.rules]
unresolved-import = "ignore"

[tool.pytest.ini_options]
addopts = """
    --ds=django_markup.tests.settings
    --cov=./django_markup
    --cov-append
    --cov-branch
    --nomigrations
    --reuse-db
"""
filterwarnings = ["ignore::RuntimeWarning"]

[tool.coverage]
run.omit = [
    "django_markup/tests/*",
]
report.exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

